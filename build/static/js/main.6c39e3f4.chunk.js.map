{"version":3,"sources":["components/NavBar/index.js","components/Head/index.js","components/Image/index.js","components/ImageContainer/index.js","App.js","index.js"],"names":["NavBar","props","className","href","notification","includes","score","topScore","Head","Image","role","data-id","id","aria-label","shake","style","backgroundImage","image","onClick","ImageContainer","state","data","clicked","handleClick","event","target","dataset","checkIfClicked","console","log","unclickedData","resetArrToFalse","setState","shuffleArray","newData","setClickedTrue","array","arrCopy","slice","i","length","j","Math","floor","random","temp","parseInt","arr","forEach","item","this","map","img","key","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c39e3f4.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction NavBar(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"brand\">\n          <a href=\"/\">Clicky Game</a>\n        </li>\n        <li className={props.notification.includes(\" correctly\") ? \n          \"correct\": \n          \"incorrect\"}\n        >\n          {props.notification}\n        </li>\n        <li>\n          Score: {props.score} | Top Score: {props.topScore}\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './style.css';\n\nfunction Head(props) {\n  return (\n    <header>\n      <h1>Clicky Game!</h1>\n      <h2>\n        Click on an image to earn points, but don't click on any more than once!\n      </h2>\n    </header>\n  )\n}\n\nexport default Head;\n","import React from 'react';\nimport './style.css';\n\n// eslint-disable-next-line require-jsdoc\nfunction Image(props) {\n  return (\n    <div\n      role='img'\n      data-id={props.id}\n      aria-label='click item'\n      className={props.shake ? 'click-item shake' : 'click-item'}\n      style={{backgroundImage: `url(${props.image})`}}\n      onClick={props.onClick}\n    >\n    </div>\n  );\n}\n\nexport default Image;\n","import React, {\n    Component\n} from 'react';\nimport NavBar from '../NavBar';\nimport Head from '../Head';\nimport Image from '../Image';\nimport './style.css';\n\nclass ImageContainer extends Component {\n    state = {\n        data: [{\n                id: 0,\n                clicked: false,\n                image: '/img/goku.png'\n            }, {\n                id: 1,\n                clicked: false,\n                image: '/img/bulma.png'\n            },\n            {\n                id: 2,\n                clicked: false,\n                image: '/img/chiaotzu.png'\n            },\n            {\n                id: 3,\n                clicked: false,\n                image: '/img/krillin.png'\n            },\n            {\n                id: 4,\n                clicked: false,\n                image: '/img/mrpopo.png'\n            },\n            {\n                id: 5,\n                clicked: false,\n                image: '/img/mutenroshi.png'\n            },\n            {\n                id: 6,\n                clicked: false,\n                image: '/img/oolong.png'\n            },\n            {\n                id: 7,\n                clicked: false,\n                image: '/img/piccolo.png'\n            },\n            {\n                id: 8,\n                clicked: false,\n                image: '/img/pilaf.png'\n            },\n            {\n                id: 9,\n                clicked: false,\n                image: '/img/tenshinhan.png'\n            },\n            {\n                id: 10,\n                clicked: false,\n                image: '/img/yajirobe.png'\n            },\n            {\n                id: 11,\n                clicked: false,\n                image: '/img/yamucha.png'\n            }\n        ],\n        score: 0,\n        topScore: 0,\n        notification: 'Click an image to begin!',\n        shake: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            data: this.shuffleArray(this.state.data)\n        });\n    }\n\n    handleClick = event => {\n        const id = event.target.dataset.id;\n        // const values = this.getImageById(id);\n        // const clickedImg = values[0];\n        // const clickedIndex = values[1];\n\n        // If the image has not been clicked before now.\n        if (!this.checkIfClicked(id)) {\n            console.log(this.state.data);\n            // Get a new array with the clicked item's \n            // clicked value set to true.\n            const newData = this.setClickedTrue(id);\n            // Check if the new score is higher than topScore and setState.\n            if ((this.state.score + 1) > this.state.topScore) {\n                this.setState({\n                    data: this.shuffleArray(newData),\n                    score: this.state.score + 1,\n                    notification: 'You guessed correctly!',\n                    topScore: this.state.score + 1,\n                    shake: false\n                });\n            } else {\n                this.setState({\n                    data: this.shuffleArray(newData),\n                    score: this.state.score + 1,\n                    notification: 'You guessed correctly!',\n                    shake: false\n                });\n            }\n        } else {\n            // TO-DO: Give some kind of notification that the user lost.\n            console.log('lost');\n            // Set all clicked values to false.\n            const unclickedData = this.resetArrToFalse(this.state.data);\n            // Reset and rerender data and score.\n            // Leaving topScore untouched so that we keep the user's topScore.\n            this.setState({\n                data: this.shuffleArray(unclickedData),\n                score: 0,\n                notification: 'You guessed incorrectly!',\n                shake: true\n            })\n        }\n    }\n\n    shuffleArray = array => {\n        const arrCopy = array.slice();\n        let i = arrCopy.length - 1;\n        for (; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            let temp = arrCopy[i];\n            arrCopy[i] = arrCopy[j];\n            arrCopy[j] = temp;\n        }\n        return arrCopy;\n    }\n\n    checkIfClicked = id => {\n        for (let i = 0; i < this.state.data.length; i++) {\n            if (this.state.data[i].id === parseInt(id)) {\n                return this.state.data[i].clicked;\n            }\n        }\n    }\n\n    setClickedTrue = id => {\n        const arrCopy = this.state.data.slice();\n        for (let i = 0; i < arrCopy.length; i++) {\n            if (arrCopy[i].id === parseInt(id)) {\n                arrCopy[i].clicked = true;\n                return arrCopy;\n            }\n        }\n    }\n\n    resetArrToFalse = arr => {\n        const arrCopy = arr.slice();\n        arrCopy.forEach(item => {\n            item.clicked = false;\n        })\n        return arrCopy;\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar \n                  score={this.state.score}\n                  topScore={this.state.topScore} \n                  notification={this.state.notification}\n                />\n                <Head / >\n                <div className='container'>\n                    {this.state.data.map(img => (\n                        <Image\n                          key={img.id}\n                          id={img.id}\n                          image={img.image}\n                          shake={this.state.shake}\n                          onClick={this.handleClick}\n                        />\n                    ))}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default ImageContainer;\n","import React from 'react';\nimport ImageContainer from './components/ImageContainer';\n\nfunction App() {\n  return (\n    <ImageContainer />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}